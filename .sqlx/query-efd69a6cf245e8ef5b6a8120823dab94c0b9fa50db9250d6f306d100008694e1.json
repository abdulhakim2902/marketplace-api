{
  "db_name": "PostgreSQL",
  "query": "\n            WITH \n                owners AS (\n                    SELECT n.collection_id, COUNT(DISTINCT n.owner) AS owners\n                    FROM nfts n\n                    GROUP BY n.collection_id\n                ),\n                prev_floors AS (\n                    SELECT DISTINCT ON (a.collection_id) a.collection_id, a.price FROM activities a\n                    WHERE a.tx_type = 'list'\n                        AND ($1::INTERVAL IS NULL OR a.block_time >= NOW() - $1::INTERVAL)\n                    ORDER BY a.collection_id, a.price ASC\n                ),\n                listings AS (\n                    SELECT l.collection_id, MIN(l.price) AS floor, COUNT(*) AS count\n                    FROM listings l\n                    WHERE l.listed\n                    GROUP BY l.collection_id\n                ),\n                sales AS (\n                    SELECT \n                        a.collection_id, \n                        COUNT(*)            AS count, \n                        SUM(a.price)        AS volume,\n                        SUM(a.usd_price)    AS volume_usd\n                    FROM activities a\n                    WHERE a.tx_type = 'buy'\n                        AND ($1::INTERVAL IS NULL OR a.block_time >= NOW() - $1::INTERVAL)\n                    GROUP BY a.collection_id\n                ),\n                top_bids AS (\n                    SELECT b.collection_id, MAX(b.price) AS price\n                    FROM bids b\n                    WHERE b.status = 'active'\n                        AND b.bid_type = 'solo'\n                        AND b.expired_at > NOW()\n                    GROUP BY b.collection_id\n                )\n            SELECT\n                c.id,\n                c.slug, \n                c.supply, \n                c.title, \n                c.description, \n                c.cover_url, \n                l.floor,\n                pf.price                                    AS prev_floor,\n                l.count                                     AS listed,\n                o.owners,\n                s.count                                     AS sales,\n                s.volume,\n                s.volume_usd,\n                tb.price                                    AS top_offer,\n                (s.volume / NULLIF(s.count, 0))::NUMERIC    AS average \n            FROM collections c\n                LEFT JOIN listings l ON c.id = l.collection_id\n                LEFT JOIN owners o ON c.id = o.collection_id\n                LEFT JOIN sales s ON c.id = s.collection_id\n                LEFT JOIN top_bids tb ON c.id = tb.collection_id\n                LEFT JOIN prev_floors pf ON c.id = pf.collection_id\n            ORDER BY s.volume DESC\n            LIMIT $2 OFFSET $3\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Varchar"
      },
      {
        "ordinal": 1,
        "name": "slug",
        "type_info": "Varchar"
      },
      {
        "ordinal": 2,
        "name": "supply",
        "type_info": "Int8"
      },
      {
        "ordinal": 3,
        "name": "title",
        "type_info": "Varchar"
      },
      {
        "ordinal": 4,
        "name": "description",
        "type_info": "Text"
      },
      {
        "ordinal": 5,
        "name": "cover_url",
        "type_info": "Varchar"
      },
      {
        "ordinal": 6,
        "name": "floor",
        "type_info": "Int8"
      },
      {
        "ordinal": 7,
        "name": "prev_floor",
        "type_info": "Int8"
      },
      {
        "ordinal": 8,
        "name": "listed",
        "type_info": "Int8"
      },
      {
        "ordinal": 9,
        "name": "owners",
        "type_info": "Int8"
      },
      {
        "ordinal": 10,
        "name": "sales",
        "type_info": "Int8"
      },
      {
        "ordinal": 11,
        "name": "volume",
        "type_info": "Numeric"
      },
      {
        "ordinal": 12,
        "name": "volume_usd",
        "type_info": "Numeric"
      },
      {
        "ordinal": 13,
        "name": "top_offer",
        "type_info": "Int8"
      },
      {
        "ordinal": 14,
        "name": "average",
        "type_info": "Numeric"
      }
    ],
    "parameters": {
      "Left": [
        "Interval",
        "Int8",
        "Int8"
      ]
    },
    "nullable": [
      false,
      true,
      true,
      true,
      true,
      true,
      null,
      true,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  "hash": "efd69a6cf245e8ef5b6a8120823dab94c0b9fa50db9250d6f306d100008694e1"
}
